# Configuration file for ArmeSFo CA CP/CPS OID 1.3.6.1.4.1.17306.8.1.0.6
# Last modified: 07.10.2008 by Arsen Hayrapetyan 
#

# This definition stops the following lines choking if HOME isn
# defined.
HOME	 = .
RANDFILE	 = $ENV::HOME/.rnd

# Extra OBJECT IDENTIFIER info:
oid_section	 = new_oids

 [ new_oids ]

ARMESFOOID	 = 1.3.6.1.4.1.17306
ARMESFOCAOID	 = ${ARMESFOOID}.8
ARMESFOCACPCPSOID	 = ${ARMESFOCAOID}.1.0.6

 [ policy01 ]

policyIdentifier	 = ARMESFOCACPCPSOID

####################################################################
 [ ca ]
default_ca	 = CA_default	# The default ca section

####################################################################
 [ CA_default ]

dir	 = c:/ca	# Where everything is kept
certs	 = $dir/certs	# Where the issued certs are kept
crl_dir	 = $dir/crl	# Where the issued crl are kept
database	 = $dir/index.txt	# database index file.
new_certs_dir	 = $dir/newcerts	# default place for new certs.

certificate	 = $dir/cacert.pem	# The CA certificate
serial	 = $dir/serial	# The current serial number
crl	 = $dir/crl.pem	# The current CRL
private_key	 = $dir/private/cakey.pem	# The private key
RANDFILE	 = $dir/private/.rand	# private random number file


# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crl_extensions	= crl_ext

default_days	 = 365	# how long to certify for
default_crl_days	 = 30	# how long before next CRL
default_md	 = sha1	# which md to use.
preserve	 = yes	# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)

policy	 = policy_match
#x509_extensions = service_cert_extension

#[ another_CA ]
#policy		= policy_anything


# For the CA policy
 [ policy_match ]
countryName	 = match
# stateOrProvinceName	= optional
organizationName	 = match
organizationName	 = supplied
organizationalUnitName	 = supplied
commonName	 = supplied

# [ policy_anything ]
#countryName	 = optional
#stateOrProvinceName	 = optional
#localityName	 = optional
#organizationName	 = optional
#organizationalUnitName	 = optional
#commonName	 = optional
#emailAddress	 = optional

# [ policy_many_multiple_attributes ]
#countryName	 = match
#organizationName	 = match
#organizationName	 = match
#organizationName	 = match
#organizationName	 = supplied
#organizationalUnitName	 = match
#organizationalUnitName	 = match
#organizationalUnitName	 = optional
#commonName	 = supplied

####################################################################
 [ req ]
default_bits	 = 1024
default_keyfile	 = privkey.pem
distinguished_name	 = req_distinguished_name
attributes	 = req_attributes
x509_extensions	 = v3_ca_extension	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString.
# utf8only: only UTF8Strings.
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: current versions of Netscape crash on BMPStrings or UTF8Strings
# so use this option with caution!
string_mask	 = nombstr

# req_extensions = v3_req_extension # The extensions to add to a certificate request

 [ req_distinguished_name ]
countryName	 = Country Name (2 letter code)
countryName_default	 = AM
countryName_min	 = 2
countryName_max	 = 2

stateOrProvinceName	 = State Or Province Name
stateOrProvinceName_default	 = 

localityName	 = Locality Name
localityName_default	 = 

0.organizationName	 = Organization Name (eg, company)
0.organizationName_default	 = ArmeSFo

# we can do this but it is not needed normally :-)
1.organizationName	 = Second Organization Name (eg, company)
1.organizationName_default	 = 

organizationalUnitName	 = Organizational Unit Name (eg, section)
#organizationalUnitName_default	=

commonName	 = Common Name (eg, your name or your server\
commonName_max	 = 64

emailAddress	 = Email Address
emailAddress_max	 = 40

# SET-ex3			= SET extension number 3

 [ req_attributes ]
challengePassword	 = A challenge password
challengePassword_min	 = 16
challengePassword_max	 = 256

unstructuredName	 = An optional company name

 [ usr_cert_extension ]
# These extensions are added when 

basicConstraints	 = critical, CA:FALSE
keyUsage	 = critical, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage	 = clientAuth, emailProtection
#subjectAltName	 = email:$ENV::EMAIL
certificatePolicies	 = ia5org, @policy01
crlDistributionPoints	 = URI:http://armesfoca-crl.fzk.de/crl.pem

 [ srv_cert_extension ]
# These extensions are added when 

basicConstraints	 = critical, CA:FALSE
keyUsage	 = critical, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage	 = clientAuth, serverAuth
#subjectAltName	 = DNS:$ENV::FQDN
certificatePolicies	 = ia5org, @policy01
crlDistributionPoints	 = URI:http://armesfoca-crl.fzk.de/crl.pem


 [ service_cert_extension ]
# These extensions are added when 

basicConstraints	 = critical, CA:FALSE
keyUsage	 = critical, digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement
subjectKeyIdentifier	 = hash
authorityKeyIdentifier	 = keyid,issuer:always
#subjectAltName	 = DNS:$ENV::SERVICE
issuerAltName	 = email:ca@escience.am
certificatePolicies	 = ia5org, @policy01
crlDistributionPoints	 = URI:http://armesfoca-crl.fzk.de/crl.pem
nsCertType	 = client, server, email
nsBaseUrl	 = http://www.escience.am/ca/
nsCaPolicyUrl	 = http://www.escience.am/ca/policy/
nsComment	 = "This is a service certificate issued by the ArmeSFo Certification Authority"
nsCaRevocationUrl	 = http://armesfoca-crl.fzk.de/crl.pem



 [ v3_ca_extension ]
# Extensions for a typical CA (these extensions are added when generating self signed CA) 

basicConstraints	 = critical, CA:TRUE
keyUsage	 = critical, digitalSignature , nonRepudiation , keyCertSign , cRLSign
subjectKeyIdentifier	 = hash
authorityKeyIdentifier	 = keyid,issuer:always
subjectAltName	 = email:ca@escience.am
issuerAltName	 = email:ca@escience.am
certificatePolicies	 = ia5org, @policy01
crlDistributionPoints	 = URI:http://armesfoca-crl.fzk.de/crl.pem
nsCertType	 = sslCA, emailCA, objCA
nsBaseUrl	 = http://www.escience.am/ca/
nsCaPolicyUrl	 = http://www.escience.am/ca/policy/
nsComment	 = "This is the root certificate of the ArmeSFo Certification Authority"
nsCaRevocationUrl	 = http://armesfoca-crl.fzk.de/crl.pem

 [ engine ]
default	 = openssl
# rsa = openssl
# dsa = openssl
# dh = openssl
# rand = openssl
# bn_mod_exp = openssl
# bn_mod_exp_crt = openssl






















